{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,2BAA2B;AAC3B,4DAA4D;AAC5D;AACA;AACA;;AAEA;AACA,8GAA8G;AAC9G,UAAU;AACV;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA,yFAAyF;AACzF,kBAAkB;AAClB;AACA,+EAA+E;AAC/E;;AAEA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA,+CAA+C;AAC/C;;AAEA;;AAEA,4CAA4C;AAC5C;AACA,cAAc;AACd;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,iEAAe,IAAI;;;;;;;;;;;;;;;AChHgC;;AAEnD;AACA;;AAEA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;;AAEA,yBAAyB;AACzB;AACA;;AAEA,mBAAmB;AACnB,2DAA2D;AAC3D;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,uBAAuB,UAAU,MAAM,SAAS;AAChD,wBAAwB,WAAW;AACnC,4CAA4C,WAAW;AACvD;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;AACA;AACA;AACA;;AAEA,IAAI,+DAAW;AACf;AACA,4BAA4B,kCAAkC;AAC9D;AACA,aAAa;AACb,SAAS;AACT;;AAEA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACrD4B;AACA;;;AAGhD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B;AACA,KAAK;;AAEL,kCAAkC;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA,qDAAqD;AACrD,mDAAmD;;AAEnD,+BAA+B;AAC/B,uDAAuD;AACvD;AACA,gBAAgB;;AAEhB,iDAAiD;;AAEjD,YAAY,4DAAQ;AACpB;AACA,uCAAuC;AACvC;AACA,4CAA4C;AAC5C,iBAAiB;AACjB;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB;AACjB,SAAS;AACT;;AAEA,wCAAwC;AACxC;;AAEA;AACA,QAAQ,iDAAS;;AAEjB;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACrFpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL,6CAA6C;AAC7C;AACA;AACA;AACA,KAAK;;AAEL,kDAAkD;AAClD,uEAAuE;AACvE;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,iEAAe,KAAK,EAAC;AACC;;;;;;;;;;;;;;;ACnDtB,kBAAkB,sFAAsF;AACxG;;AAEA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;;AAE9D,8BAA8B;AAC9B,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA,iCAAiC;AACjC,mCAAmC,cAAc;AACjD,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gEAAgE;;AAEhE,2DAA2D;;AAE3D,qCAAqC;AACrC,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;;;AAGA,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA,QAAQ;;AAER;AACA;AACA,QAAQ;AACR;;;AAGA;;AAEA,yDAAyD;AACzD;AACA;;AAEA,6CAA6C;;;AAG7C;AACA;AACA,KAAK,GAAG;;;AAGR;;AAEA;;AAEA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;;AAEA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;;AAEA;AACA,uDAAuD;AACvD;AACA;;AAEA;AACA,sEAAsE;AACtE;AACA,UAAU;AACV;AACA;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,2BAA2B;AAC3B;AACA,UAAU;AACV;AACA;AACA,qDAAqD,OAAO;;AAE5D;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,KAAK;;AAEL,0BAA0B;AAC1B;AACA;;AAEA;AACA;;AAEA,yDAAyD,OAAO;;AAEhE;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACvMrB;AACA;;AAEA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA,SAAS;;AAET;AACA,gDAAgD;AAChD,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA,iEAAe,IAAI;;;;;;;;;;;;;;ACzCnB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,2DAA2D;;AAE3D,uBAAuB;;AAEvB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,mCAAmC;AACnC;AACA;AACA,qEAAqE;AACrE;AACA;;AAEA;;AAEA;;AAEA,iEAAe,KAAK;;;;;;;;;;;;;;;ACnEpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C,IAAI,YAAY,WAAW;AACtE;;AAEA;AACA;;AAEoB;;;;;;;UCtBpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;;AAEkC;AACE;AACA;AACA;AACF;AACE;AACE;AACM;;AAE5C;AACA,0CAA0C,yDAAS,kCAAkC;;AAErF,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,E","sources":["webpack://food_dist/./js/modules/calc.js","webpack://food_dist/./js/modules/cards.js","webpack://food_dist/./js/modules/forms.js","webpack://food_dist/./js/modules/modal.js","webpack://food_dist/./js/modules/slider.js","webpack://food_dist/./js/modules/tabs.js","webpack://food_dist/./js/modules/timer.js","webpack://food_dist/./js/services/services.js","webpack://food_dist/webpack/bootstrap","webpack://food_dist/webpack/runtime/define property getters","webpack://food_dist/webpack/runtime/hasOwnProperty shorthand","webpack://food_dist/webpack/runtime/make namespace object","webpack://food_dist/./js/script.js"],"sourcesContent":["function calc() {\n    //-----------Калькуялтор--------------\n\n    const result = document.querySelector('.calculating__result span');\n\n    let sex, height, weight, age, ratio;\n\n    if (localStorage.getItem('sex')) {\n        let sex = localStorage.getItem('sex');\n    } else {\n        sex = 'female';\n        localStorage.setItem('sex', 'female');\n    }\n\n    if (localStorage.getItem('ratio')) {\n        let ratio = localStorage.getItem('ratio');\n    } else {\n        ratio = 1.375;\n        localStorage.setItem('ratio', 1.375);\n    }\n\n    function calcTotal() { //рассчитываем общие значения суточной нормы\n        if (!sex || !height || !weight || !age || !ratio) { // если не указан какой-то параметр, то выводим прочерк\n            result.textContent = '____';\n            return;\n        }\n\n        if (sex === 'female') {\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio); //формулу берем из интернета\n        } else {\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\n        }\n    }\n\n    calcTotal();\n\n    function initLocalSettings(selector, activeClass) {\n        const elements = document.querySelectorAll(selector);\n\n        elements.forEach(elem => {\n            elem.classList.remove(activeClass);\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\n                elem.classList.add(activeClass);\n            }\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\n                elem.classList.add(activeClass);\n            }\n        });\n    }\n\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active')\n\n    function getStaticInformation(selector, activeClass) { //функция для получения информации от div с классами активности\n        const elements = document.querySelectorAll(selector);\n\n        elements.forEach(elem => {\n            elem.addEventListener('click', (e) => {\n                if (e.target.getAttribute('data-ratio')) {\n                    ratio = +e.target.getAttribute('data-ratio');\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio')); //запоминаем введенные ранне пользователем данные \n                } else {\n                    sex = e.target.getAttribute('id');\n                    localStorage.setItem('sex', +e.target.getAttribute('id')); //запоминаем введенные ранне пользователем данные \n                }\n\n                elements.forEach(elem => {\n                    elem.classList.remove(activeClass);\n                });\n\n                e.target.classList.add(activeClass);\n\n                calcTotal();\n            });\n        });\n    }\n\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\n\n    function getDynamicInformation(selector) { //функция для получения данных из инпутов    \n        const input = document.querySelector(selector);\n\n        input.addEventListener('input', () => {\n\n            if (input.value.match(/\\D/g)) { //при вводе не числа в инпут появляется красная обводка\n                input.style.border = '1px solid red';\n            } else {\n                input.style.border = 'none';\n            }\n\n            switch (input.getAttribute('id')) { //разветвлённое условие\n                case 'height': //записываем данные в соответствующий инпут ссылаясь на id у каждого инпута\n                    height = +input.value;\n                    break;\n                case 'weight':\n                    weight = +input.value;\n                    break;\n                case 'age':\n                    age = +input.value;\n                    break;\n            }\n\n            calcTotal();\n        });\n    }\n\n    getDynamicInformation('#height');\n    getDynamicInformation('#weight');\n    getDynamicInformation('#age');\n}\n\nexport default calc;","import { getResource } from '../services/services';\n\nfunction cards() {\n    //Используем классы для карточек\n\n    class Card {\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) { //задаем в качестве аргументов. то из чего состоит карточка\n            this.src = src;\n            this.alt = alt;\n            this.title = title;\n            this.descr = descr;\n            this.price = price;\n            this.classes = classes;\n            this.parent = document.querySelector(parentSelector);\n            this.transfer = 27; //обменный курс для метода changetToUAH()\n            this.changetToUAH();\n        }\n\n        changetToUAH() { //метод конвертации валюты\n            this.price = this.price * this.transfer;\n        }\n\n        render() { //задаем верстку\n            const element = document.createElement('div'); //оборачиваем всю структуру карточки в один div\n            if (this.classes.length === 0) {\n                this.element = 'menu__item';\n                element.classList.add(this.element);\n            } else {\n                this.classes.forEach(className => element.classList.add(className));\n            }\n\n            element.innerHTML = `\n            <img src=${this.src} alt=${this.alt}>\n            <h3 class=${this.title}>Меню “Премиум”</h3>\n            <div class=\"menu__item-descr\">${this.descr}</div>\n            <div class=\"menu__item-divider\"></div>\n            <div class=\"menu__item-price\">\n                <div class=\"menu__item-cost\">Цена:</div>\n                <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\n            </div>\n        `;\n            this.parent.append(element);\n        }\n    }\n\n    getResource('http://localhost:3000/menu')\n        .then(data => {\n            data.forEach(({ img, altimg, title, descr, price }) => {\n                new Card(img, altimg, title, descr, price, \".menu .container\").render();\n            });\n        });\n}\n\nexport default cards;","import { closeModal, openModal } from './modal';\nimport { postData } from '../services/services';\n\n\nfunction forms(formSelector, modalTimerId) {\n    //Создание формы\n\n    const forms = document.querySelectorAll(formSelector);\n    const message = {\n        loading: 'img/form/spinner.svg',\n        success: 'Спасибо! Скоро мы с вами свяжемся',\n        failure: 'Что-то пошло не так...'\n    };\n\n    forms.forEach(item => { //подвязываем на каждую form функцию postDatа, которая будет обработчиком события при отправке \n        bindPostData(item);\n    });\n\n    function bindPostData(form) { //функция отправки \n        form.addEventListener('submit', (e) => {\n            e.preventDefault();\n\n            let statusMessage = document.createElement('img');\n            statusMessage.src = message.loading;\n            statusMessage.style.cssText = `\n                display: block;\n                margin: 0 auto;\n            `; //выводим пользователю сообщение   \n            // form.append(statusMessage);\n            form.insertAdjacentElement('afterend', statusMessage);\n\n            const formData = new FormData(form);\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\n\n            // const request = new XMLHttpRequest(); //отправляем данные без перезагрузки страницы с помощью XMLHttpRequest \n            // request.open('POST', 'server.php'); //исп метод POST и ссылаемся на файл server.php\n\n            // const obj = {}; //создаем пустой обьект\n            // formData.forEach(function(value, key) { //необходимо превратить FormData в формат JSON, с помощью forEach переберем formData и все данные поместим в obj\n            //     obj[key] = value;\n            // });\n\n            // const json = JSON.stringify(obj); //превращаем обычный обьект в JSON при помощи stringify()\n\n            postData('http://localhost:3000/requests', json)\n                .then(data => {\n                    console.log(data); //в консоль данные которые вернул сервер\n                    showThanksModal(message.success);\n                    statusMessage.remove(); //удаляем со страницы блок с сообщением об отправке \n                }).catch(() => {\n                    showThanksModal(message.failure);\n                }).finally(() => {\n                    form.reset(); //очищаем инпуты модального окна после отправки данных\n                });\n        });\n    }\n\n    function showThanksModal(message) { //создаем окно с благодарность после отправки формы\n        const previousModalDialog = document.querySelector('.modal__dialog');\n\n        previousModalDialog.classList.add('hide');\n        openModal('.modal', modalTimerId);\n\n        const thanksModal = document.createElement('div');\n        thanksModal.classList.add('modal__dialog');\n        thanksModal.innerHTML = `\n            <div class=\"modal__content\">\n                <div class=\"modal__close\" data-close>×</div>\n                <div class=\"modal__title\">${message}</div>\n            </div>\n        `;\n\n        document.querySelector('.modal').append(thanksModal);\n        setTimeout(() => {\n            thanksModal.remove();\n            previousModalDialog.classList.add('show');\n            previousModalDialog.classList.remove('hide');\n            closeModal('.modal');\n        }, 4000);\n    }\n\n    // fetch('http://localhost:3000/menu')\n    //     .then(data => data.json())\n    //     .then(res => console.log(res));\n}\nexport default forms;","function closeModal(modalSelector) {\n    const modal = document.querySelector(modalSelector);\n    modal.classList.add('hide');\n    modal.classList.remove('show');\n    document.body.style.overflow = '';\n}\n\nfunction openModal(modalSelector, modalTimerId) {\n    const modal = document.querySelector(modalSelector);\n\n    modal.classList.add('show');\n    modal.classList.remove('hide');\n    document.body.style.overflow = 'hidden';\n\n    if (modalTimerId) {\n        clearInterval(modalTimerId); //отключаем показ модального окна если оно уже было открыто пользователем ранее\n    }\n}\n\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\n\n    const modalTrigger = document.querySelectorAll(triggerSelector), //обращаемся по назначенному в верстке аттрибуту\n        modal = document.querySelector(modalSelector);\n\n    modalTrigger.forEach(btn => {\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\n    });\n\n    modal.addEventListener('click', (e) => { //закрываем модальное окно по клику в пустую область\n        if (e.target === modal || e.target.getAttribute('data-close') == '') {\n            closeModal(modalSelector);\n        }\n    });\n\n    document.addEventListener('keydown', (e) => { //закрываем модальное окно клавишей Esc\n        if (e.code === 'Escape' && modal.classList.contains('show')) { //клавиша Esc сработает только в случае если модальное окно открыто\n            closeModal(modalSelector);\n        }\n    });\n\n    function showModalByScroll() {\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n            openModal(modalSelector, modalTimerId);\n            window.removeEventListener('scroll', showModalByScroll);\n        }\n    }\n    window.addEventListener('scroll', showModalByScroll);\n\n}\n\nexport default modal;\nexport { closeModal };\nexport { openModal };","function slider({ container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field }) {\n    //---Слайдер----------------------------\n\n    let slideIndex = 1; // индекс, кот определяет текущее положение в слайдере\n    let offset = 0;\n\n    const slides = document.querySelectorAll(slide),\n        slider = document.querySelector(container),\n        prev = document.querySelector(prevArrow),\n        next = document.querySelector(nextArrow),\n        total = document.querySelector(totalCounter),\n        current = document.querySelector(currentCounter),\n        slidesWrapper = document.querySelector(wrapper), //создаем для второго варианта слайдера\n        slidesField = document.querySelector(field), //создаем для второго варианта слайдера\n        width = window.getComputedStyle(slidesWrapper).width; //создаем для второго варианта слайдера\n\n    if (slides.length < 10) { //меняем индексы при перелистывании изображений(prev)\n        total.textContent = `0${slides.length}`;\n        current.textContent = `0${slideIndex}`;\n    } else {\n        total.textContent = slides.length;\n        current.textContent = slideIndex;\n    }\n\n    //!---первый вариант  ----------\n    // showSlides(slideIndex);\n\n    // if (slides.length < 10) { //меняем индексы при перелистывании изображений(prev)\n    //     total.textContent = `0${slides.length}`;\n    // } else {\n    //     total.textContent = slides.length;\n    // }\n\n    // function showSlides(n) {\n    //     if (n > slides.length) {\n    //         slideIndex = 1;\n    //     }\n\n    //     if (n < 1) {\n    //         slideIndex = slides.length;\n    //     }\n\n    //     slides.forEach(item => item.style.display = 'none'); //показ первого слайда на странице и скрытие остальных \n\n    //     slides[slideIndex - 1].style.display = 'block'; //отображаем пользователю правильный по порядку слайд \n\n    //     if (slides.length < 10) { //меняем индексы при перелистывании изображений(next)\n    //         current.textContent = `0${slideIndex}`;\n    //     } else {\n    //         current.textContent = slideIndex;\n    //     }\n    // }\n\n\n    // function plusSlides(n) { //при перелистывании слайдера увеличиваем счетчик на один индекс\n    //     showSlides(slideIndex += n);\n    // }\n\n    // prev.addEventListener('click', () => {\n    //     plusSlides(-1);\n    // });\n\n    // next.addEventListener('click', () => {\n    //     plusSlides(1);\n    // });\n    //!---------------------------\n\n\n    //!---второй вариант слайдера----------\n\n    slidesField.style.width = 100 * slides.length + '%'; //устанавливаем ширину блока с изображениями\n    slidesField.style.display = 'flex';\n    slidesField.style.transition = '0.5s all';\n\n    slidesWrapper.style.overflow = 'hidden'; //скрываем все элементы которые не попадают в область видимости(создают полосу прокрутки)\n\n\n    slides.forEach(slide => {\n        slide.style.width = width;\n    }); //фиксируем ширину для каждого изображения\n\n\n    //----создаем точки навигации под слайдом(слайдер-карусель)-----------------------\n\n    slider.style.position = 'relative';\n\n    const indicators = document.createElement('ol'),\n        dots = []; //создаем массив для того чтобы динамически изменялся слайдер на странице\n\n    indicators.classList.add('carousel-indicators');\n    indicators.style.cssText = `\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 15;\n        display: flex;\n        justify-content: center;\n        margin-right: 15%;\n        margin-left: 15%;\n        list-style: none;\n    `;\n    slider.append(indicators);\n\n    for (let i = 0; i < slides.length; i++) {\n        const dot = document.createElement('li');\n        dot.setAttribute('data-slide-to', i + 1);\n        dot.style.cssText = `\n            box-sizing: content-box;\n            flex: 0 1 auto;\n            width: 30px;\n            height: 6px;\n            margin-right: 3px;\n            margin-left: 3px;\n            cursor: pointer;\n            background-color: #fff;\n            background-clip: padding-box;\n            border-top: 10px solid transparent;\n            border-bottom: 10px solid transparent;\n            opacity: .5;\n            transition: opacity .6s ease;\n        `;\n        if (i == 0) { //добавляем стили активному в текущий момент слайду \n            dot.style.opacity = 1;\n        }\n        indicators.append(dot);\n        dots.push(dot); //добавляем стиль чтобы динамически изменялся слайдер на странице\n    }\n\n    //---------------------------\n\n    function zeroAdd() {\n        if (slides.length < 10) {\n            current.textContent = `0${slideIndex}`;\n        } else {\n            current.textContent = slideIndex;\n        }\n    }\n\n    function slideChange() {\n        dots.forEach(dot => dot.style.opacity = '.5'); //динамически меняем слайдер на странице\n        dots[slideIndex - 1].style.opacity = 1;\n    }\n\n    next.addEventListener('click', () => {\n        if (offset == deleteNotDigits(width) * (slides.length - 1)) { //устанавливаем ширину строки с изобр и переводим в числовой тип данных\n            offset = 0;\n        } else {\n            offset += deleteNotDigits(width);\n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`;\n\n        if (slideIndex == slides.length) {\n            slideIndex = 1;\n        } else {\n            slideIndex++;\n        }\n\n        zeroAdd();\n        slideChange();\n    });\n\n    prev.addEventListener('click', () => {\n        if (offset == 0) { //устанавливаем ширину строки с изобр и переводим в числовой тип данных\n            offset = deleteNotDigits(width) * (slides.length - 1);\n        } else {\n            offset -= deleteNotDigits(width);\n        }\n        slidesField.style.transform = `translateX(-${offset}px)`;\n\n        if (slideIndex == 1) {\n            slideIndex = slides.length;\n        } else {\n            slideIndex--;\n        }\n\n        zeroAdd();\n        slideChange();\n    });\n\n    dots.forEach(dot => { //изменяем активный индикатор при клике мышкой на него\n        dot.addEventListener('click', (e) => {\n            const slideTo = e.target.getAttribute('data-slide-to');\n\n            slideIndex = slideTo;\n            offset = deleteNotDigits(width) * (slideTo - 1);\n\n            slidesField.style.transform = `translateX(-${offset}px`;\n\n            zeroAdd();\n            slideChange();\n        });\n    });\n\n    function deleteNotDigits(str) {\n        return +str.replace(/\\D/g, '');\n    }\n}\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\n    //Табы\n\n    let tabs = document.querySelectorAll(tabsSelector),\n        tabsContent = document.querySelectorAll(tabsContentSelector),\n        tabsParent = document.querySelector(tabsParentSelector);\n\n    function hideTabContent() { //скрываем неактивные табы\n        tabsContent.forEach(item => {\n            item.classList.add('hide');\n            item.classList.remove('show', 'fade');\n        });\n\n        tabs.forEach(item => {\n            item.classList.remove(activeClass); //удаляем класс активности у не активных табов\n        });\n    }\n\n    function showTabContent(i = 0) {\n        tabsContent[i].classList.add('show', 'fade');\n        tabsContent[i].classList.remove('hide');\n        tabs[i].classList.add(activeClass);\n    }\n\n    hideTabContent();\n    showTabContent();\n\n    tabsParent.addEventListener('click', (event) => {\n        const target = event.target;\n\n        if (target && target.classList.contains(tabsSelector.slice(1))) {\n            tabs.forEach((item, i) => {\n                if (target == item) {\n                    hideTabContent();\n                    showTabContent(i);\n                }\n            });\n        }\n    });\n}\n\nexport default tabs;","function timer(id, deadline) {\n    //Таймер\n\n    // const deadline = '2021-10-20';\n\n    function getTimeRemaining(endtime) {\n        const tech = Date.parse(endtime) - Date.parse(new Date()), //при запуске функции мы получим разницу в миллисекундах между датами\n            days = Math.floor(tech / (1000 * 60 * 60 * 24)), //получаем количество дней до окончания акции(в скобках получили количетво миллисекунд в одних сутках)(1000 миллисекунд умножаем на 60 секунд, после умножаем на 60 минут и умножаем на 24 часа в сутках)\n            hours = Math.floor((tech / (1000 * 60 * 60) % 24)),\n            minutes = Math.floor((tech / 1000 / 60) % 60),\n            seconds = Math.floor((tech / 1000) % 60);\n\n        return {\n            'total': tech,\n            'days': days,\n            'hours': hours,\n            'minutes': minutes,\n            'seconds': seconds\n        };\n    }\n\n    function getZero(num) { //подставляем ноль в таймер если число в счетчике состоит из одного символа\n        if (num >= 0 && num < 10) {\n            return '0' + num;\n        } else {\n            return num;\n        }\n    }\n\n    function setClock(selector, endtime) { //устанавливаем таймер на странице\n        const timer = document.querySelector(selector), //создаем переменные, в которые помещаются элементы со страницы\n            days = timer.querySelector('#days'),\n            hours = timer.querySelector('#hours'),\n            minutes = timer.querySelector('#minutes'),\n            seconds = timer.querySelector('#seconds'),\n            timeInterval = setInterval(updateClock, 1000); //через каждую секунду будем запускать функцию updateClock\n\n        updateClock(); //убираем показ даты таймера из верстки, чтобы сразу показывалось текущее вермя до окончания акции\n\n        function updateClock() {\n            const t = getTimeRemaining(endtime);\n\n            days.innerHTML = getZero(t.days);\n            hours.innerHTML = getZero(t.hours);\n            minutes.innerHTML = getZero(t.minutes);\n            seconds.innerHTML = getZero(t.seconds);\n\n            if (t.total <= 0) {\n                clearInterval(timeInterval);\n            }\n        }\n    }\n\n    setClock(id, deadline);\n\n\n    function showModalByScroll() { //при пролистывании страницы до конца будет показываться модальное окно\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n            openModal();\n            window.removeEventListener('scroll', showModalByScroll); //когда модальное окно показалось пользователю один раз, больше оно показываться при скролле сайта не будет \n        }\n    }\n\n    window.addEventListener('scroll', showModalByScroll);\n\n}\n\nexport default timer;","const postData = async(url, data) => {\n    let res = await fetch(url, {\n        method: \"POST\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: data\n    });\n\n    return await res.json();\n};\n\nasync function getResource(url) {\n    let res = await fetch(url);\n\n    if (!res.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n    }\n\n    return await res.json();\n}\n\nexport { postData };\nexport { getResource };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//Используем стандарт ES6 Modules\n\nimport tabs from './modules/tabs';\nimport modal from './modules/modal';\nimport timer from './modules/timer';\nimport cards from './modules/cards';\nimport calc from './modules/calc';\nimport forms from './modules/forms';\nimport slider from './modules/slider';\nimport { openModal } from './modules/modal';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000); //вызываем модальное окно через определенное время\n\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\n    modal('[data-modal]', '.modal', modalTimerId);\n    timer('.timer', '2021-10-25');\n    cards();\n    calc();\n    forms('form', modalTimerId);\n    slider({\n        container: '.offer__slider',\n        nextArrow: '.offer__slider-next',\n        prevArrow: '.offer__slider-prev',\n        totalCounter: '#total',\n        currentCounter: '#current',\n        wrapper: '.offer__slider-wrapper',\n        field: '.offer__slider-inner',\n        slide: '.offer__slide'\n    });\n});"],"names":[],"sourceRoot":""}